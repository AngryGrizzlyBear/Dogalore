{"version":3,"sources":["Components/SelectBreeds.js","Components/App.js","index.js"],"names":["SelectBreed","_ref","breed","allBreeds","handleChange","react_default","a","createElement","value","onChange","map","key","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","setState","target","onRandomDogRequest","axios","get","then","response","index","state","images","length","concat","data","message","catch","error","console","log","onBreedRequest","onReset","onPreviousImage","onNextImage","_this2","image","src","alt","onClick","SelectBreeds","Component","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c217e77.chunk.js","sourcesContent":["import React from 'react'\n\nconst SelectBreed = ({ breed, allBreeds, handleChange }) => {\n  return (\n    <select value={breed} onChange={handleChange}>\n      <option value=\"empty\">Select a breed!</option>\n      {allBreeds.map(breed => (<option key={breed} value={breed}>{breed}</option>))}\n    </select>\n  )\n};\n\n\nexport default SelectBreed","import React, {Component} from 'react';\nimport axios from 'axios'\nimport {concat} from 'lodash'\nimport SelectBreeds from './SelectBreeds'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: null,\n      images: [],\n      allBreeds: [],\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://dog.ceo/api/breeds/list')\n      .then(response => {\n        this.setState({allBreeds: response.data.message})\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n\n  handleChange = (event) => {\n    this.setState({breed: event.target.value});\n  };\n\n  onRandomDogRequest = () => {\n    axios.get('https://dog.ceo/api/breeds/image/random')\n      .then(response => {\n        this.setState({\n          index: this.state.images.length,\n          images: concat(this.state.images, response.data.message)\n        })\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  onBreedRequest = () => {\n    axios.get(`https://dog.ceo/api/breed/${this.state.breed}/images/random`)\n      .then(response => {\n        this.setState({\n          index: this.state.images.length,\n          images: concat(this.state.images, response.data.message)\n        })\n      })\n      .catch(error => {\n        console.log(error)\n      });\n  };\n\n  onReset = () => {\n    this.setState({\n      index: null,\n      images: []\n    })\n  };\n\n  onPreviousImage = () => {\n    this.setState({\n      index: this.state.index <= 0 ? this.state.index : this.state.index - 1\n    });\n  };\n\n  onNextImage = () => {\n    this.setState({\n      index: this.state.index >= this.state.images.length - 1 ? this.state.index : this.state.index + 1\n    })\n  };\n\n  render() {\n    const image = this.state.images[this.state.index];\n    return (\n      <div>\n        {image && <img src={image} alt='dog'/>}\n        <div>\n          <div>\n            <button onClick={this.onRandomDogRequest}>\n              Random!\n            </button>\n          </div>\n          <div>\n            <SelectBreeds\n              breed={this.state.breed}\n              allBreeds={this.state.allBreeds}\n              handleChange={this.handleChange}\n            />\n            <button onClick={this.onBreedRequest}>\n              {`Get ${this.state.breed || 'Dog'}!`}\n            </button>\n          </div>\n          <div>\n            <button onClick={this.onReset}>\n              Restart!\n            </button>\n            <button onClick={this.onPreviousImage}>\n              Previous Image\n            </button>\n            <button onClick={this.onNextImage}>\n              Next Image\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from  './Components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}